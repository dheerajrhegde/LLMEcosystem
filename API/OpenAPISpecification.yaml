openapi: 3.0.0
info:
  title: LLM Query Service
  description: API for querying an LLM and retrieving response metrics, including metadata such as token usage, safety, bias, and validation results.
  version: "1.1.0"
servers:
  - url: https://127.0.0.1:8000/
paths:
  /query:
    post:
      summary: Get LLM response for a given query
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The input query to process.
                data_domain:
                  type: string
                  description: The domain of the data to use for context (e.g., medical, legal). No content provided to LLM if omitted.
                llm_name:
                  type: string
                  description: Name of the LLM (e.g., OpenAI, Mistral, Claude) to use.
                version:
                  type: string
                  description: The version of the LLM to use (e.g., gpt-4o-2024-08-06, ministral-3b-2410, Claude Sonnet 3.5).
                transaction_id:
                  type: string
                  description: The transaction ID to follow in case of multiple calls. New transaction created if nothing passed.
      responses:
        '200':
          description: Successful response with LLM output and metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: The response generated by the LLM.
                  usage_metadata:
                    type: object
                    description: Metadata related to token usage.
                    properties:
                      input_tokens:
                        type: integer
                        description: Number of input tokens used.
                      output_tokens:
                        type: integer
                        description: Number of output tokens generated.
                      total_tokens:
                        type: integer
                        description: Total number of tokens used.
                      input_token_details:
                        type: object
                        properties:
                          cache_read:
                            type: integer
                            description: Number of tokens read from cache.
                      output_token_details:
                        type: object
                        properties:
                          reasoning:
                            type: integer
                            description: Number of tokens used for reasoning.
                  time_taken:
                    type: string
                    description: Time taken to generate the response.
                  llm_used:
                    type: string
                    description: The LLM model used to generate the response.
                  safety_score:
                    type: number
                    description: A score representing the safety of the response (0-1 scale).
                  bias_score:
                    type: number
                    description: A score representing the bias of the response (0-1 scale).
                  feedback:
                    type: string
                    description: Feedback about the safety of the content.
                  validation_result:
                    type: object
                    description: Result of the validation checks for harmful content and flagged categories.
                    properties:
                      is_harmful:
                        type: boolean
                        description: Indicates if the response contains harmful content.
                      flagged_categories:
                        type: object
                        description: Categories flagged as potentially harmful.
        '400':
          description: Invalid input provided.
        '500':
          description: Server error while processing the query.
